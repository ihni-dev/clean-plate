# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
    - develop
    - feature/*
    - release/*
    - hotfix/*
    - support/*
  paths:
    include:
    - src/*

variables:
  containerRegistryServiceConnection: 'Docker Hub'
  imageRepository: ihni/clean-plate

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: 'NET'
  steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core 3.0'
      inputs:
        version: '3.0.x'

    - task: DotNetCoreCLI@2
      displayName: 'Install GitVersion'
      inputs:
        command: custom
        custom: tool
        arguments: 'install GitVersion.Tool --tool-path .'

    - script: ./dotnet-gitversion /output buildserver /nofetch
      displayName: 'Set build version'

    - bash: |
          version=$(GitVersion.SemVer)
          echo "##vso[task.setvariable variable=version;isOutput=true]$version"
      name: outputVersion
      displayName: 'Save build version'

    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: restore
        projects: '**/*.csproj'
        
    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration Release'

- job: 'Docker'    
  variables:
    version: $[ dependencies.NET.outputs['outputVersion.Version'] ]
  dependsOn: 'NET'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop')))
  steps:
    - task: Docker@2
      displayName: 'Build docker image'
      inputs:
        command: build
        Dockerfile: '**/Dockerfile'
        containerRegistry: $(containerRegistryServiceConnection)
        repository: $(imageRepository)
        tags: |
          version
          latest

    - task: Docker@2
      displayName: 'Push docker image'
      inputs: 
        command: push
        containerRegistry: $(containerRegistryServiceConnection)
        repository: $(imageRepository)
        tags: |
          version
          latest